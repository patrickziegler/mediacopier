name: build-and-test

on: ["push", "pull_request"]

jobs:
  build-and-test:
    strategy:
      matrix:
        config:
        - {name: "Ubuntu 20.04 (GCC)", os: "ubuntu-20.04", CC: "gcc", CXX: "g++"}
        - {name: "Ubuntu 20.04 (Clang)", os: "ubuntu-20.04", CC: "clang", CXX: "clang++"}

    name: ${{matrix.config.name}}
    runs-on: ${{matrix.config.os}}

    steps:
    - name: Install dependencies
      env:
        DEBIAN_FRONTEND: "noninteractive"
      run: sudo apt-get update && sudo apt-get install -y build-essential cmake ffmpeg imagemagick lcov libavformat-dev libexiv2-dev libgtest-dev libimage-exiftool-perl libjpeg-dev libjpeg-progs libspdlog-dev pkg-config

    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Build and test
      env:
        CC: ${{matrix.config.CC}}
        CXX: ${{matrix.config.CXX}}
        BUILD_DIR: "build-and-test/"
      run: |
        cmake -B ${BUILD_DIR} -DENABLE_TEST=ON
        MAKEFLAGS=-j$(nproc) cmake --build ${BUILD_DIR}
        ctest --test-dir ${BUILD_DIR} -V

    - name: Generate coverage report
      env:
        CC: ${{matrix.config.CC}}
        CXX: ${{matrix.config.CXX}}
        BUILD_DIR: "build-coverage/"
      run: |
        cmake -B ${BUILD_DIR} -DENABLE_COVERAGE=ON
        MAKEFLAGS=-j$(nproc) cmake --build ${BUILD_DIR}
        cmake --build ${BUILD_DIR} --target coverage
      if: matrix.config.CC == 'gcc'

    - name: Publish coverage report
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        path-to-lcov: build-coverage/coverage/trace.info
      if: matrix.config.CC == 'gcc'
